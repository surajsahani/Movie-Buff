apply plugin: 'com.android.application'
apply plugin: 'me.tatarka.retrolambda'
apply plugin: 'com.getkeepsafe.dexcount'        // apply dexcount AFTER the Android plugin!
apply plugin: 'com.neenbedankt.android-apt'     // android-apt modifies the javaCompile task, apply this plugin LAST!

apply from: '../quality/checkstyle.gradle'
apply from: '../quality/findbugs.gradle'
apply from: '../quality/pmd.gradle'
apply from: '../quality/jacoco.gradle'

def isOnCi() {
    def ci = System.getenv("CI")
    return (ci != null && ci == "true")
}

android {
    compileSdkVersion 25
    buildToolsVersion "25.0.0"

    defaultConfig {
        applicationId "me.maxdev.popularmoviesapp"
        minSdkVersion 16
        targetSdkVersion 25
        versionCode 3
        versionName "2.1"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }

    signingConfigs {
        config
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    def STRING = "String"
    def UNDEFINED = '"UNDEFINED"'
    def THE_MOVIE_DB_API_KEY = "THE_MOVIE_DB_API_KEY"

    buildTypes {
        debug {
            versionNameSuffix "-debug"
            minifyEnabled false
            testCoverageEnabled true
        }

        release {
            minifyEnabled false
            signingConfig signingConfigs.config
            proguardFiles getDefaultProguardFile('proguard-android.txt'),
                    'proguard-rules.pro',
                    'proguard-glide.pro',
                    'proguard-retrofit.pro',
                    'proguard-rxjava.pro'
        }
    }
    buildTypes.each {
        if (!isOnCi()) {
            it.buildConfigField STRING, THE_MOVIE_DB_API_KEY, MY_MOVIE_DB_API_KEY
        } else {
            it.buildConfigField STRING, THE_MOVIE_DB_API_KEY, UNDEFINED
        }
    }

    lintOptions {
        disable 'InvalidPackage' // Okio references java.nio that does not presented in Android SDK
        disable 'GoogleAppIndexingWarning' // App does not have deep linking
        disable 'IconDipSize'
        warningsAsErrors true
        abortOnError true
        textReport true
        textOutput 'stdout'
    }

    // Log unit tests.
    testOptions.unitTests.all {
        testLogging {
            events 'passed', 'skipped', 'failed', 'standardOut', 'standardError'
            exceptionFormat 'full'
        }
        jacoco {
            includeNoLocationClasses = true
        }
    }

    // Log instrumentation tests.
    tasks.withType(com.android.build.gradle.internal.tasks.AndroidTestTask) { task ->
        task.doFirst {
            logging.level = LogLevel.INFO
        }
        task.doLast {
            logging.level = LogLevel.LIFECYCLE
        }
    }
}

def keystorePropertiesFile = rootProject.file("keystore.properties")
def keystoreProperties = new Properties()

if (keystorePropertiesFile.exists()) {

    keystoreProperties.load(new FileInputStream(keystorePropertiesFile))

    if (keystoreProperties != null &&
            keystoreProperties.containsKey('storeFile') &&
            keystoreProperties.containsKey('storePassword') &&
            keystoreProperties.containsKey('keyAlias') &&
            keystoreProperties.containsKey('keyPassword')) {

        println 'keystore.properties found. Sign APK'
        android.signingConfigs.config.storeFile file(keystoreProperties['storeFile'])
        android.signingConfigs.config.storePassword keystoreProperties['storePassword']
        android.signingConfigs.config.keyAlias keystoreProperties['keyAlias']
        android.signingConfigs.config.keyPassword keystoreProperties['keyPassword']

    } else {
        println 'keystore.properties found but some entries are missing'
        android.buildTypes.release.signingConfig = null
    }
} else {
    println 'keystore.properties not found'
    android.buildTypes.release.signingConfig = null
}

ext {
    supportLibraryVersion = "25.0.1"
    retrofitVersion = "2.1.0"
    okHttpVersion = "3.4.2"
    rxJavaVersion = "1.2.2"
    rxAndroidVersion = "1.2.1"
    rxLifecycleVersion = "1.0"
    rxBindingsVersion = "0.4.0"
    butterknifeVersion = "8.4.0"
    daggerVersion = "2.7"
    glideVersion = "3.7.0"
    jUnitVersion = "4.12"
    mockitoVersion = "1.10.19"
    testingSupportLibraryVersion = "0.5"
}

dependencies {
    compile fileTree(include: ['*.jar'], dir: 'libs')

    compile "com.android.support:appcompat-v7:${supportLibraryVersion}"
    compile "com.android.support:design:${supportLibraryVersion}"
    compile "com.android.support:cardview-v7:${supportLibraryVersion}"
    compile "com.android.support:support-annotations:${supportLibraryVersion}"

    compile "com.squareup.retrofit2:retrofit:${retrofitVersion}"
    compile "com.squareup.retrofit2:converter-gson:${retrofitVersion}"
    compile "com.squareup.retrofit2:adapter-rxjava:${retrofitVersion}"

    compile "com.squareup.okhttp3:okhttp:${okHttpVersion}"
    compile "com.squareup.okhttp3:logging-interceptor:${okHttpVersion}"

    compile "io.reactivex:rxjava:${rxJavaVersion}"
    compile "io.reactivex:rxandroid:${rxAndroidVersion}"

    compile "com.trello:rxlifecycle:${rxLifecycleVersion}"
    compile "com.trello:rxlifecycle-android:${rxLifecycleVersion}"
    compile "com.trello:rxlifecycle-components:${rxLifecycleVersion}"

    compile "com.jakewharton.rxbinding:rxbinding-appcompat-v7:${rxBindingsVersion}"

    compile "com.jakewharton:butterknife:${butterknifeVersion}"
    apt "com.jakewharton:butterknife-compiler:${butterknifeVersion}"

    compile "com.google.dagger:dagger:${daggerVersion}"
    apt "com.google.dagger:dagger-compiler:${daggerVersion}"

    compile "com.github.bumptech.glide:glide:${glideVersion}"

    testCompile "junit:junit:${jUnitVersion}"
    testCompile "org.mockito:mockito-core:${mockitoVersion}"

    androidTestCompile "com.android.support:support-annotations:${supportLibraryVersion}"
    androidTestCompile "com.android.support.test:runner:${testingSupportLibraryVersion}"
    androidTestCompile "com.android.support.test:rules:${testingSupportLibraryVersion}"
}
